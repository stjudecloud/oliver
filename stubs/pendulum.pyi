from typing import Any, Optional, Union

from datetime import date, datetime, timedelta, tzinfo as _tzinfo

class Formatter: ...

class FormattableMixing:
    def format(self, fmt: Any, locale: Optional[Any] = ...) -> str: ...
    def for_json(self) -> str: ...
    def __format__(self, format_spec: Any) -> str: ...

class Date(FormattableMixing, date): ...
class Duration(timedelta): ...
class Period(Duration): ...

class DateTime(datetime, Date):
    @classmethod
    def now(cls: Any, tz: Union[str, Timezone, _tzinfo, None] = ...) -> DateTime: ...
    def in_tz(self: DateTime, tz: Union[str, Timezone]) -> DateTime: ...
    def to_day_datetime_string(self: DateTime) -> str: ...

class Timezone(_tzinfo):
    def __init__(self: Timezone, name: str, extended: bool = ...) -> None: ...

def parse(text: str, **options: Any) -> DateTime: ...
def from_timestamp(
    timestamp: Union[int, float], tz: Union[str, Timezone] = ...
) -> DateTime: ...
def now() -> DateTime: ...
